{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bb\\\\Desktop\\\\facerecognitionbrain\\\\src\\\\App.js\";\nimport React, { Component, useCallback } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport Clarifai from \"clarifai\";\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nconst particlesOptions = {\n  particles: {\n    number: 30,\n    density: {\n      enable: true,\n      value_area: 800\n    }\n  }\n};\nconst app = new Clarifai.App({\n  apiKey: '68eeffc67f6342d1b062c1f316d736f2'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          email: data.email,\n          name: data.name,\n          id: data.id,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(width, height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        email: '',\n        name: '',\n        id: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      route,\n      box,\n      imageUrl\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }), route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 10\n      }\n    })) : route === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n      oadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 16\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 14\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/bb/Desktop/facerecognitionbrain/src/App.js"],"names":["React","Component","useCallback","Navigation","Signin","Register","Logo","ImageLinkForm","Rank","Particles","Clarifai","FaceRecognition","particlesOptions","particles","number","density","enable","value_area","app","App","apiKey","constructor","loadUser","data","setState","user","email","name","id","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","value","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","onRouteChange","route","isSignedIn","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AAKA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,SAAS,EAAE;AACVC,IAAAA,MAAM,EAAE,EADE;AAEVC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,IADD;AAEPC,MAAAA,UAAU,EAAE;AAFL;AAFC;AADU,CAAzB;AAUE,MAAMC,GAAG,GAAG,IAAIR,QAAQ,CAACS,GAAb,CAAiB;AAC3BC,EAAAA,MAAM,EAAE;AADmB,CAAjB,CAAZ;;AAKF,MAAMD,GAAN,SAAkBlB,SAAlB,CAA4B;AAEzBoB,EAAAA,WAAW,GAAG;AACZ;;AADY,SAkBfC,QAlBe,GAkBHC,IAAD,IAAU;AACnB,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAE;AACnBC,UAAAA,KAAK,EAAEH,IAAI,CAACG,KADO;AAEnBC,UAAAA,IAAI,EAAEJ,IAAI,CAACI,IAFQ;AAGnBC,UAAAA,EAAE,EAAEL,IAAI,CAACK,EAHU;AAInBC,UAAAA,OAAO,EAAEN,IAAI,CAACM,OAJK;AAKnBC,UAAAA,MAAM,EAAGP,IAAI,CAACO;AALK;AAAP,OAAd;AAQD,KA3Bc;;AAAA,SA6BdC,qBA7Bc,GA6BUR,IAAD,IAAU;AAC9B,YAAMS,YAAY,GAAGT,IAAI,CAACU,OAAL,CAAa,CAAb,EAAgBV,IAAhB,CAAqBW,OAArB,CAA6B,CAA7B,EAAgCC,WAAhC,CAA4CC,YAAjE;AACA,YAAMC,KAAK,GAAEC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAb;AACA,YAAMC,KAAK,GAAEC,MAAM,CAACJ,KAAK,CAACG,KAAP,CAAnB;AACA,YAAME,MAAM,GAAED,MAAM,CAACJ,KAAK,CAACK,MAAP,CAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAAkBE,MAAlB;AACA,aAAO;AACHG,QAAAA,OAAO,EAAEb,YAAY,CAACc,QAAb,GAAwBN,KAD9B;AAEHO,QAAAA,MAAM,EAAEf,YAAY,CAACgB,OAAb,GAAuBN,MAF5B;AAGHO,QAAAA,QAAQ,EAAET,KAAK,GAAIR,YAAY,CAACkB,SAAb,GAAuBV,KAHvC;AAIHW,QAAAA,SAAS,EAAET,MAAM,GAAIV,YAAY,CAACoB,UAAb,GAA0BV;AAJ5C,OAAP;AAOF,KA1Ca;;AAAA,SA4CdW,cA5Cc,GA4CIC,GAAD,IAAS;AACxB,WAAK9B,QAAL,CAAc;AAAC8B,QAAAA,GAAG,EAAEA;AAAN,OAAd;AACD,KA9Ca;;AAAA,SAgDdC,aAhDc,GAgDEC,KAAD,IAAU;AACvB,WAAKhC,QAAL,CAAc;AAACiC,QAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaC;AAArB,OAAd;AACD,KAlDa;;AAAA,SAmDdC,cAnDc,GAmDG,MAAM;AACtB,WAAKpC,QAAL,CAAc;AAACqC,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWL;AAAtB,OAAd;AAECvC,MAAAA,GAAG,CAAC6C,MAAJ,CACCC,OADD,CACStD,QAAQ,CAACuD,iBADlB,EAEE,KAAKH,KAAL,CAAWL,KAFb,EAGCS,IAHD,CAGMC,QAAQ,IACV,KAAKd,cAAL,CAAoB,KAAKtB,qBAAL,CAA2BoC,QAA3B,CAApB,CAJJ,EAKKC,KALL,CAKWC,GAAG,IAAE1B,OAAO,CAACC,GAAR,CAAYyB,GAAZ,CALhB;AAME,KA5DU;;AAAA,SA8DXC,aA9DW,GA8DMC,KAAD,IAAW;AACzB,UAAIA,KAAK,KAAK,SAAd,EAAyB;AACvB,aAAK/C,QAAL,CAAc;AAACgD,UAAAA,UAAU,EAAE;AAAb,SAAd;AACD,OAFD,MAEO,IAAID,KAAK,KAAK,MAAd,EAAsB;AAC3B,aAAK/C,QAAL,CAAc;AAACgD,UAAAA,UAAU,EAAE;AAAb,SAAd;AACD;;AACO,WAAKhD,QAAL,CAAc;AAAC+C,QAAAA,KAAK,EAAEA;AAAR,OAAd;AACT,KArEU;;AAEZ,SAAKT,KAAL,GAAY;AACVL,MAAAA,KAAK,EAAE,EADG;AAEVI,MAAAA,QAAQ,EAAE,EAFA;AAGVP,MAAAA,GAAG,EAAE,EAHK;AAIViB,MAAAA,KAAK,EAAE,QAJG;AAKVC,MAAAA,UAAU,EAAE,KALF;AAMV/C,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,EADH;AAEJC,QAAAA,IAAI,EAAE,EAFF;AAGJC,QAAAA,EAAE,EAAE,EAHA;AAIJC,QAAAA,OAAO,EAAE,CAJL;AAKJC,QAAAA,MAAM,EAAG;AALL;AANI,KAAZ;AAcD;;AAuDF2C,EAAAA,MAAM,GAAG;AACP,UAAM;AAACD,MAAAA,UAAD;AAAaD,MAAAA,KAAb;AAAoBjB,MAAAA,GAApB;AAAyBO,MAAAA;AAAzB,QAAqC,KAAKC,KAAhD;AACA,wBACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AACO,MAAA,MAAM,EAAElD,gBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,eAIE,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAE4D,UAAxB;AAAoC,MAAA,aAAa,EAAE,KAAKF,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKGC,KAAK,KAAK,MAAV,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACD,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,eAEF,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWrC,IAAX,CAAgBE,IAA5B;AAAkC,MAAA,OAAO,EAAE,KAAKmC,KAAL,CAAWrC,IAAX,CAAgBI,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFE,eAGF,oBAAC,aAAD;AACJ,MAAA,aAAa,EAAE,KAAK0B,aADhB;AAEJ,MAAA,cAAc,EAAE,KAAKK,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHE,eAMF,oBAAC,eAAD;AAAiB,MAAA,GAAG,EAAEN,GAAtB;AAA2B,MAAA,QAAQ,EAAGO,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANE,CADJ,GAUIU,KAAK,KAAK,QAAV,gBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAI,KAAKjD,QAAxB;AAAkC,MAAA,aAAa,EAAG,KAAKgD,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,gBAEE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAI,KAAKhD,QAA3B;AAAqC,MAAA,aAAa,EAAG,KAAKgD,aAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBT,CADA;AAwBH;;AAnG2B;;AAsG5B,eAAenD,GAAf","sourcesContent":["import React, { Component, useCallback } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport Clarifai from \"clarifai\";\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\n\n\n\n\nconst particlesOptions = {\n    particles: {\n     number :30,\n     density: {\n       enable: true,\n       value_area: 800\n     }\n    }\n  }\n\n  const app = new Clarifai.App({\n    apiKey: '68eeffc67f6342d1b062c1f316d736f2'\n   });\n\n\nclass App extends Component {\n    \n   constructor() {\n     super();\n     this.state= {\n       input: '',\n       imageUrl: '',\n       box: {},\n       route: 'signin',\n       isSignedIn: false,\n       user: {\n         email: '',\n         name: '',\n         id: '',\n         entries: 0,\n         joined : ''\n       }\n     }\n   } \n   \n  loadUser = (data) => {\n    this.setState({user: {\n      email: data.email,\n      name: data.name,\n      id: data.id,\n      entries: data.entries,\n      joined : data.joined \n      \n    }});\n  } \n   \n   calculateFaceLocation= (data) => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image= document.getElementById('inputimage');\n      const width= Number(image.width);\n      const height= Number(image.height);\n      console.log(width,height);\n      return {\n          leftCol: clarifaiFace.left_col * width,\n          topRow: clarifaiFace.top_row * height,\n          rightCol: width - (clarifaiFace.right_col*width),\n          bottomRow: height - (clarifaiFace.bottom_row * height)\n\n      }\n   }\n\n   displayFaceBox = (box) => {\n     this.setState({box: box});\n   }\n\n   onInputChange =(event)=> {\n     this.setState({input: event.target.value});\n   }\n   onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    \n     app.models\n     .predict(Clarifai.FACE_DETECT_MODEL,\n       this.state.input)\n     .then(response => \n         this.displayFaceBox(this.calculateFaceLocation(response)))\n         .catch(err=>console.log(err));\n      }\n\n      onRouteChange = (route) => {\n        if (route === 'signout') {\n          this.setState({isSignedIn: false});\n        } else if (route === 'home') {\n          this.setState({isSignedIn: true});\n        }\n                this.setState({route: route});\n      }\n\n  render() {\n    const {isSignedIn, route, box, imageUrl} = this.state;\n    return (\n    <div className=\"App\">\n       <Particles className='particles'\n              params={particlesOptions}\n        />\n      <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n      {route === 'home'\n          ?<div>\n          <Logo />\n         <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n         <ImageLinkForm \n     onInputChange={this.onInputChange } \n     onButtonSubmit={this.onButtonSubmit}/>\n         <FaceRecognition box={box} imageUrl= {imageUrl}/>\n         </div>\n         : (\n           route === 'signin'\n             ? <Signin oadUser = {this.loadUser} onRouteChange ={this.onRouteChange}/>\n           : <Register loadUser = {this.loadUser} onRouteChange ={this.onRouteChange} />\n           )\n          \n      }\n   </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}